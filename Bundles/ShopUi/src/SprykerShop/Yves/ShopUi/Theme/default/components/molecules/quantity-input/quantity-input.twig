{% extends model('component') %}
{% import model('component') as component %}

{% define config = {
    name: 'quantity-input',
    tag: 'label'
} %}

{# @deprecated property "step" is deprecated. #}
{% define data = {
    label: 'cart.item_quantity' | trans,
    maxQuantity: null,
    minQuantity: 1,
    value: 1,
    readOnly: false,
    hasUpdateButton: true,
    step: 1,
    inputAttributes: {
        class: 'input input--expand',
        name: 'quantity',
        min: data.minQuantity | default(1),
        max: data.maxQuantity | default(null) < 0 or data.maxQuantity | default(null) < data.minQuantity | default(1) ? false : data.maxQuantity | default(null),
        value: data.value | default(1),
        disabled: data.readOnly | default(false),
    },
    numberFormatConfig: {},
} %}

{# @deprecated "define inputAttributes" is deprecated. Use data.inputAttributes instead. #}
{% define inputAttributes = {} %}

{% set inputAttributes = inputAttributes | merge(data.inputAttributes) %}
{% set inputAttributeFilters = {
    type: false,
    value: false,
    name: false,
    class: false,
} %}
{% set filteredInputAttributes = inputAttributes | filter((value, key) => inputAttributeFilters[key] ?? true) %}

{% set numberFormatConfig = {
    min: inputAttributes.min,
    max: inputAttributes.max,
} | merge(data.numberFormatConfig) %}

{% block body %}
    {% block label %}
        {{ data.label }}
    {% endblock %}

    <span class="grid">
        <span class="col col--expand">
            {% block input %}
                {% include molecule('formatted-number-input') with {
                    modifiers: ['expand'],
                    data: {
                        inputName: inputAttributes.name,
                        inputExtraClasses: inputAttributes.class,
                        inputValue: inputAttributes.value,
                        inputAttributes: filteredInputAttributes,
                        hiddenInputAttributes: {
                            'data-qa': config.name,
                            disabled: inputAttributes.disabled,
                        }
                    },
                    attributes: numberFormatConfig,
                } only %}
            {% endblock %}
        </span>

        {% if data.hasUpdateButton and not data.readOnly %}
            <span class="col">
                <button type="submit" class="button button--expand" {{qa('quantity-input-submit')}}>
                    {% include atom('icon') with {
                        modifiers: ['small'],
                        class: config.name ~ '__sync',
                        data: {
                            name: 'sync',
                        },
                    } only %}
                </button>
            </span>
        {% endif %}
    </span>
{% endblock %}
