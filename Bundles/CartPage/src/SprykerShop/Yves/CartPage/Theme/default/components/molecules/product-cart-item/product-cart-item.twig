{% extends molecule('product-item') %}
{% import molecule('product-item') as macros %}

{% define config = {
    name: 'product-cart-item',
} %}

{% define data = {
    cart: {},
    isQuoteEditable: false,
    attributes: [],
} %}

{% set canEditCart = not is_granted('ROLE_USER') or data.isQuoteEditable %}

{% block imageContainer %}
    <div class="{{ config.name }}__col col col--sm-12 col--lg-2">
        {{ parent() }}
    </div>
{% endblock %}

{% block image %}
    {{ macros.thumbnail(data.image, data.name, extraClass, ['small']) }}
{% endblock %}

{% block labels %}{% endblock %}
{% block groups %}{% endblock %}

{% block content %}
    <div class="{{ config.name }}__col col col--sm-12 col--lg-5">
        {% block name -%}
            <h6>
                {% if data.url %}
                    <a href="{{ path(data.url) }}">{{ data.name }}</a>
                {% else %}
                    {{ data.name }}
                {% endif %}
            </h6>
        {%- endblock %}

        {% block sku -%}
            <meta itemprop="sku" content="{{ data.sku }}">

            <small class="text-secondary" data-qa="cart-item-sku">
                {{- 'cart.item.sku' | trans }} {{ data.sku -}}
            </small>
        {%- endblock %}

        {% block additionalInformation %}
            {% if data.attributes %}
                {% include molecule('cart-item-variant-selector', 'CartPage') with {
                    data: {
                        cartItem: data.product,
                        cartItemAttributes: data.attributes,
                        canEditCart: canEditCart,
                    },
                } only %}
            {% endif %}

            {% if data.cart %}
                {% widget 'ProductBundleCartItemsListWidget' args [data.product, data.cart] only %}{% endwidget %}
            {% endif %}

            {% block soldBy %}
                {% widget 'SoldByMerchantWidget' args [data.product] only %}
                {% elsewidget 'ProductOfferSoldByMerchantWidget' args [data.product] only %}
                {% elsewidget 'ProductSoldByMerchantWidget' args [data.product] only %}
                {% endwidget %}
            {% endblock %}

            {% include molecule('cart-item-summary', 'CartPage') with {
                data: {
                    unitPrice: data.product.unitPrice | money,
                    subtotalPrice: data.product.sumSubtotalAggregation | money,
                    cartItem: data.product,
                    currencyIsoCode: data.cart ? data.cart.currency.code,
                },
            } only %}

            {% widget 'ProductConfigurationCartItemDisplayWidget' args [data.product] only %}
            {% endwidget %}
            {% widget 'ProductConfigurationCartPageButtonWidget' args [data.product] only %}
            {% endwidget %}

        {% endblock %}
    </div>
{% endblock %}

{% block actionsContainer %}
    <div class="{{ config.name }}__col col col--sm-12 col--lg-4">
        {% if data.product.amountSalesUnit %}
            {% include molecule('packaging-unit-cart', 'ProductPackagingUnitWidget') ignore missing with {
                data: {
                    amount: data.product.amount,
                    quantity: data.product.quantity,
                    quantitySalesUnit: data.product.quantitySalesUnit,
                    quantityConversion: data.product.quantitySalesUnit.conversion | default(null),
                    quantityProductMeasurementUnit: data.product.quantitySalesUnit.productMeasurementUnit | default(null),
                    amountSalesUnit: data.product.amountSalesUnit,
                    amountConversion: data.product.amountSalesUnit.conversion,
                    amountProductMeasurementUnit: data.product.amountSalesUnit.productMeasurementUnit,
                    amountValue: data.product.amountSalesUnit.value,
                },
            } only %}
        {% endif %}

        {% block actions %}

            {% if data.product.amountSalesUnit is empty %}
                {% if canEditCart %}
                    {% widget 'CartProductMeasurementUnitQuantitySelectorWidget' args [data.product] only %}
                    {% nowidget %}
                        {% include molecule('cart-quantity-input', 'CartPage') with {
                            data: {
                                cartItem: data.product,
                            },
                        } only %}
                    {% endwidget %}
                {% else %}
                    {{ 'cart.item_quantity' | trans }}:
                    <strong>{{ data.product.quantity | executeFilterIfExists('formatInt', app.locale) }}</strong>
                {% endif %}
            {% endif %}

            {% if canEditCart %}
                {% widget 'RemoveFromCartFormWidget' args [data.product] only %}
                    {% block embeddedData %}
                        <button class="float-right link" data-init-single-click>
                            {{ 'product_cart_item.remove' | trans }}
                        </button>
                    {% endblock %}
                {% endwidget %}
            {% endif %}

            {% if data.cart %}
                {% block cartItemNote %}
                    {% widget 'CartItemNoteFormWidget' args [data.product, data.cart] only %}{% endwidget %}
                {% endblock %}
            {% endif %}
        {% endblock %}
    </div>
{% endblock %}
