{% extends model('component') %}

{% define config = {
    name: 'cart-item-variant-selector',
} %}

{% define data = {
    cartItem: required,
    canEditCart: required,
    cartItemAttributes: [],
    ajaxTriggerAttribute: null,
} %}

{% block component %}
    {% if data.cartItemAttributes is not empty %}
        {{ parent() }}
    {% endif %}
{% endblock %}

{% block body %}
    {% set cartProductMeasurementUnitQuantitySelectorWidget = findWidget('CartProductMeasurementUnitQuantitySelectorWidget', [data.cartItem]) %}
    {% if cartProductMeasurementUnitQuantitySelectorWidget %}
        {% set isProductSalesUnit = cartProductMeasurementUnitQuantitySelectorWidget.quantitySalesUnit.idProductMeasurementSalesUnit is defined
            or cartProductMeasurementUnitQuantitySelectorWidget.parameters.itemTransfer.amountSalesUnit is not null %}
    {% endif %}
    {% set submitterKey = data.ajaxTriggerAttribute ?: 'data-cart-form-submitter' %}
    {% set submitterValue = data.ajaxTriggerAttribute ? 'change' : true %}

    <form method="POST" action="{{ path(data.ajaxTriggerAttribute ? 'cart/async/update' : 'cart/update', {'sku': data.cartItem.sku }) }}">
        <ul class="list spacing-y">
            {% for attributeName, attributeOptions in data.cartItemAttributes %}
                {% set options = [] %}

                {% for value, properties in attributeOptions %}
                    {% set options = options | merge([{
                        label: value,
                        value: value,
                        selected: attribute(properties, 'selected') ? true : false,
                        disabled: attribute(properties, 'available') ? false : true
                    }]) %}
                {% endfor %}

                <li class="list__item spacing-y">
                    <label>
                        {{ ('product.attribute.' ~ attributeName) | trans }}
                        {% include atom('select') with {
                            modifiers: ['expand'],
                            data: {
                                label: ('product.attribute.' ~ attributeName) | trans,
                                options: options,
                            },
                            attributes: {
                                name: 'preselectedAttributes[' ~ attributeName ~ ']',
                                (submitterKey): submitterValue,
                                disabled: not data.canEditCart or isProductSalesUnit,
                            },
                        } only %}
                    </label>
                    <input name="selectedAttributes[{{ attributeName }}]" type="hidden">
                </li>
            {% endfor %}
        </ul>

        <input type="hidden" value="{{ data.cartItem.groupKey }}" name="groupKey">
        <input type="hidden" value="{{ data.cartItem.quantity }}" name="quantity">

        {% if data.cartItem.productOptions is not empty %}
            {% for productOption in data.cartItem.productOptions %}
                <input name="product-option[{{ productOption.groupName }}]" type="hidden" value="{{ productOption.idProductOptionValue }}">
            {% endfor %}
        {% endif %}
    </form>
{% endblock %}
