{# @deprecated Use molecule('summary-product-packaging-unit-node', 'ProductPackagingUnitWidget') instead. #}
{% extends model('component') %}

{% define config = {
    name: 'summary-product-packaging-unit',
} %}

{% define data = {
    name: required,
    quantity: required,
    amount: required,
    price: required,
    quantitySalesUnit: required,
    amountSalesUnit: required,
    images: [],
    countOfDecimalsInAmount: 10,
} %}

{% block body %}
    {% set imageUrl = data.images ? (data.images | first) : null %}

    <div class="grid">
        <div class="col col--sm-12 col--lg-3">
            {% if imageUrl %}
                {% include molecule('lazy-image') with {
                    modifiers: ['thumbnail', 'small'],
                    data: {
                        imageSrc: imageUrl.externalUrlLarge,
                        imageTitle: data.name | default,
                    },
                } only %}
            {% else %}
                <div class="text-center">
                    <small>{{ 'global.no_image_available' | trans }}</small>
                </div>
            {% endif %}
        </div>
        <div class="col col--sm-12 col--lg-9">
            {% set salesUnitName = data.quantitySalesUnit.productMeasurementUnit.name | default %}
            {% set salesUnitSummary = salesUnitName ? (data.quantity / data.quantitySalesUnit.conversion) | executeFilterIfExists('formatFloat', app.locale) ~ ' ' ~ salesUnitName | trans %}

            <strong class="float-right">{{ can('SeePricePermissionPlugin') ? data.price : 'customer.access.cannot_see_price' | trans }}</strong>
            <div>{{ data.quantity | executeFilterIfExists('formatInt', app.locale) }} <span class="text-secondary">&times;</span> {{ data.name }} {% if salesUnitSummary %}(={{ salesUnitSummary }}){% endif %}</div>
            <div>{{ 'packaging_units.cart.quantity' | trans }}: {{ data.quantity }}</div>

            {% if data.amountSalesUnit %}
                {% set amountPerQuantity = data.amount.divide(data.quantity, data.countOfDecimalsInAmount).trim %}
                {% set amountPerQuantityConversion = amountPerQuantity.divide(data.amountSalesUnit.conversion, data.countOfDecimalsInAmount).trim %}
                {% set amountSalesUnitName = salesUnitName | default(data.amountSalesUnit.productMeasurementBaseUnit.productMeasurementUnit.name) | default %}

                <div>
                    <span class="text-secondary">&times;</span>
                    {{ amountPerQuantity.toFloat() | executeFilterIfExists('formatFloat', app.locale) }} {{ amountSalesUnitName | trans }}
                    {% if amountPerQuantityConversion != amountPerQuantity %}
                        (= {{ amountPerQuantityConversion.toFloat() | executeFilterIfExists('formatFloat', app.locale) }} {{ data.amountSalesUnit.productMeasurementUnit.name | trans }})
                    {% endif %}
                    = {{ data.amount.toFloat() | executeFilterIfExists('formatFloat', app.locale) }} {{ amountSalesUnitName | trans }}
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}
