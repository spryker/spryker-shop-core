{% extends model('component') %}

{% define config = {
    name: 'order-detail-product-packaging-unit',
    tag: 'tr'
} %}

{% define data = {
    concreteItem: required,
    currencyIsoCode: required,
    countOfDecimalsInAmount: 10,
} %}

{% block body %}
    {% if data.concreteItem.quantitySalesUnit is not null and data.concreteItem.quantity is not null %}
        {% set salesUnitName = data.concreteItem.quantitySalesUnit.productMeasurementUnit.name | default %}
        {% set salesUnitQuantity = data.concreteItem.quantity / data.concreteItem.quantitySalesUnit.conversion %}
        {% set salesUnitSummary = '' %}
        {% if salesUnitName %}
            {% set salesUnitSummary = salesUnitQuantity | round(data.concreteItem.quantitySalesUnit.precision, 'floor') | executeFilterIfExists('formatFloat', app.locale) ~ ' ' ~ salesUnitName | trans %}
        {% endif %}

        {% set amountSalesUnitName = data.concreteItem.amountSalesUnit.productMeasurementUnit.name | default %}
    {% endif %}
    <td>
        {% block actions %}{% endblock %}
        {{ data.concreteItem.sku }}
    </td>
    <td>
        {{ data.concreteItem.name }}<br>
        {% if data.concreteItem.amount and data.concreteItem.quantity %}
            <span class="text-secondary">&times;</span> {{ data.concreteItem.amount.divide(data.concreteItem.quantity, data.countOfDecimalsInAmount).trim.toFloat() | executeFilterIfExists('formatFloat', app.locale) }} {{ 'packaging_units.cart.item' | trans }} (= {{ (data.concreteItem.amount.divide(data.concreteItem.quantity, data.countOfDecimalsInAmount)).divide(data.concreteItem.amountSalesUnit.conversion, data.countOfDecimalsInAmount).trim.toFloat() | executeFilterIfExists('formatFloat', app.locale) }}{{ amountSalesUnitName | trans }}) = {{ data.concreteItem.amount | executeFilterIfExists('formatFloat', app.locale) }} {{ 'packaging_units.cart.item' | trans }}
        {% endif %}
    </td>
    <td>
        {{ data.concreteItem.unitPrice | money(true, data.currencyIsoCode) }}
    </td>
    <td>
        {{ data.concreteItem.quantity | executeFilterIfExists('formatInt', app.locale) }} {% if salesUnitSummary is defined and salesUnitSummary is not empty %}(={{ salesUnitSummary }}){% endif %}
    </td>
    <td>
        {{ data.concreteItem.unitPriceToPayAggregation | money(true, data.currencyIsoCode) }}
    </td>
{% endblock body %}
