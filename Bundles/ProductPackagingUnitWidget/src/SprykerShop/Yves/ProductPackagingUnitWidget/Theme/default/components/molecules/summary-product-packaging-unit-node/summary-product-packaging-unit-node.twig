{# @var image \Generated\Shared\Transfer\ProductImageTransfer #}

{% extends model('component') %}

{% define config = {
    name: 'summary-product-packaging-unit-node',
} %}

{% define data = {
    node: required,
    name: data.node.name | default,
    quantity: data.node.quantity | default(1),
    amount: data.node.amount | default(0),
    price: data.node.sumSubtotalAggregation | default(0),
    quantitySalesUnit: data.node.quantitySalesUnit | default(null),
    amountSalesUnit: data.node.amountSalesUnit | default(null),
    images: data.node.images | default([]),
    countOfDecimalsInAmount: data.node.countOfDecimalsInAmount | default(10),
} %}

{% block body %}
    <div class="grid">
        {% block imageCol %}
            <div class="col col--sm-12 col--lg-3">
                {% block imageColInner %}
                    {% set image = data.images ? data.images | first %}

                    {% block imageCondition %}
                        {% if image %}
                            {% set thumbnailModifiers = ['small'] %}

                            {% block image %}
                                {% include molecule('lazy-image') with {
                                    modifiers: thumbnailModifiers | merge(['thumbnail']),
                                    data: {
                                        imageSrc: image.externalUrlLarge,
                                        imageTitle: data.name,
                                    },
                                } only %}
                            {% endblock %}
                        {% else %}
                            {% block emptyImage %}
                                <div class="text-center">
                                    <small>{{ 'global.no_image_available' | trans }}</small>
                                </div>
                            {% endblock %}
                        {% endif %}
                    {% endblock %}
                {% endblock %}
            </div>
        {% endblock %}

        {% block content %}
            <div class="col col--sm-12 col--lg-9">
                {% block contentInner %}
                    {% set salesUnitName = data.quantitySalesUnit.productMeasurementUnit.name | default %}
                    {% set salesUnitSummary = salesUnitName ? (data.quantity / data.quantitySalesUnit.conversion) | executeFilterIfExists('formatFloat', app.locale) ~ ' ' ~ salesUnitName | trans %}

                    {% block price %}
                        <strong class="float-right">{{ can('SeePricePermissionPlugin') ? data.price | money : 'customer.access.cannot_see_price' | trans }}</strong>
                    {% endblock %}

                    {% block summary %}
                        <div>
                            {% block summaryInner %}
                                {{ data.quantity | executeFilterIfExists('formatInt', app.locale) }} <span class="text-secondary">&times;</span> {{ data.name }}

                                {% block summaryInformation %}
                                    {% if salesUnitSummary %}
                                        {{ 'product_packaging_unit_node_summary' | trans({
                                            '%summary%': salesUnitSummary,
                                        })}}
                                    {% endif %}
                                {% endblock %}
                            {% endblock %}
                        </div>
                    {% endblock %}

                    {% block quantity %}
                        <div>{{ 'packaging_units.cart.quantity' | trans }}: {{ data.quantity | executeFilterIfExists('formatInt', app.locale) }}</div>
                    {% endblock %}

                    {% block offerByMerchant %}
                        {% widget 'SoldByMerchantWidget' args [data.node] only %}
                        {% elsewidget 'ProductOfferSoldByMerchantWidget' args [data.node] only %}
                        {% elsewidget 'ProductSoldByMerchantWidget' args [data.node] only %}
                        {% endwidget %}
                    {% endblock %}

                    {% block productConfiguration %}
                        {% widget 'ProductConfigurationCartItemDisplayWidget' args [data.node] only %}
                            {% block status %}{% endblock %}
                        {% endwidget %}
                    {% endblock %}

                    {% block amountSalesUnit %}
                        {% if data.amountSalesUnit is not empty %}
                            {% set amountPerQuantity = data.amount.divide(data.quantity, data.countOfDecimalsInAmount).trim %}
                            {% set amountPerQuantityConversion = amountPerQuantity.divide(data.amountSalesUnit.conversion, data.countOfDecimalsInAmount).trim %}
                            {% set amountSalesUnitName = salesUnitName | default(data.amountSalesUnit.productMeasurementBaseUnit.productMeasurementUnit.name) | default %}

                            {% block amountSalesUnitContainer %}
                                <div>
                                    {% block amountSalesUnitInner %}
                                        {% block amountSalesUnitSymbol %}
                                            <span class="text-secondary">&times;</span>
                                        {% endblock %}
                                        {{ amountPerQuantity.toFloat() | executeFilterIfExists('formatFloat', app.locale) }} {{ amountSalesUnitName | trans }}

                                        {% block amountSalesUnitSummary %}
                                            {% if amountPerQuantityConversion != amountPerQuantity %}
                                                {{ 'product_packaging_unit_node_summary' | trans({
                                                    '%summary%': amountPerQuantityConversion.toFloat() | executeFilterIfExists('formatFloat', app.locale) ~ ' ' ~ data.amountSalesUnit.productMeasurementUnit.name | trans,
                                                })}}
                                            {% endif %}
                                        {% endblock %}

                                        {{ 'product_packaging_unit_node_amount_summary' | trans({
                                            '%summary%': data.amount.toFloat() | executeFilterIfExists('formatFloat', app.locale) ~ ' ' ~ amountSalesUnitName | trans,
                                        })}}
                                    {% endblock %}
                                </div>
                            {% endblock %}
                        {% endif %}
                    {% endblock %}
                {% endblock %}
            </div>
        {% endblock %}
    </div>
{% endblock %}
