{% extends template('widget') %}

{% set quantityOptions = [] %}

{% for i in 1..10 %}
    {% set quantityOptions = quantityOptions | merge([{
        label: i,
        value: i,
    }]) %}
{% endfor %}

{% define data = {
    product: _widget.product,
    quantityOptions: _widget.quantityOptions | default(quantityOptions),
    salesUnits: _widget.salesUnits | default([]),
    leadProductSalesUnits: _widget.leadProductSalesUnits | default([]),
    productPackagingUnit: _widget.productPackagingUnit,
    isAddToCartDisabled: _widget.isAddToCartDisabled | default(false),
    isAmountVariable: _widget.productPackagingUnit.isAmountVariable | default(false),
    isSelfLead: _widget.packagingUnitIsSelfLead,
    jsonScheme: _widget.jsonScheme,
    minQuantityInBaseUnit: _widget.minQuantityInBaseUnit | default(1),
    minQuantityInSalesUnits: _widget.minQuantityInSalesUnits | default(1),
    numberFormatConfig: _widget.numberFormatConfig | default({}),
} %}

{% set numberFormatConfig = {'watch-external-changes': true} %}
{% for key, value in data.numberFormatConfig %}
    {% set numberFormatConfig = numberFormatConfig | merge ({ (key | replace({'_symbol': '', '_': '-'})): value }) %}
{% endfor %}

{% block body %}
    {% include molecule('packaging-unit-quantity-selector', 'ProductPackagingUnitWidget') with {
        data: {
            json: data.jsonScheme,
            product: data.product,
            quantityOptions: data.quantityOptions,
            salesUnits: data.salesUnits,
            leadProductSalesUnits: data.leadProductSalesUnits,
            productPackagingUnit: data.productPackagingUnit,
            isAddToCartDisabled: data.isAddToCartDisabled,
            packagingUnitIsAmountVariable: data.isAmountVariable,
            packagingUnitIsSelfLead: data.isSelfLead,
            minQuantityInBaseUnit: data.minQuantityInBaseUnit,
            minQuantityInSalesUnits: data.minQuantityInSalesUnits,
            numberFormatConfig: numberFormatConfig,
        },
    } only %}
{% endblock body %}
