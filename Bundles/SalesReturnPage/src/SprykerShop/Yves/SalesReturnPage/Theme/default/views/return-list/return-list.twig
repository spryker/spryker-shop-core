{% extends template('page-layout-sales-return', 'SalesReturnPage') %}

{% define data = {
    returns: _view.returns,
    pagination: {
        parameters: {},
        currentPage: _view.pagination.page,
        paginationPath: 'return/list',
        maxPage: _view.pagination.lastPage,
        showAlwaysFirstAndLast: true,
    },
    title: 'return_page.list.title' | trans,
} %}

{% set contentWrapperClass = 'box' %}

{% block salesReturnContent %}
    <div class="{{ contentWrapperClass }}">
        {% block salesReturnContentInner %}
            {% block salesReturnContentTitle %}
                <h5>{{ 'return_page.list.title' | trans }}</h5>
                {% block salesReturnContentTitleUnderline %}
                    <hr>
                {% endblock %}
            {% endblock %}

            {% if data.returns is empty %}
                {% block salesReturnContentEmptyMessage %}
                    <p>{{ 'return_page.account.no_return' | trans }}</p>
                {% endblock %}
            {% else %}
                {% set salesReturnTableClass = 'table table--expand' %}

                {% block salesReturnTable %}
                    <table class="{{ salesReturnTableClass }}">
                        {% block salesReturnTableHeader %}
                            <thead>
                                <tr>
                                    {% block salesReturnTableHeaderCells %}
                                        <th>{{ 'return_page.return.return_ref' | trans }}</th>
                                        <th>{{ 'return_page.return.order_ref' | trans }}</th>
                                        <th>{{ 'return_page.return.number_of_items' | trans }}</th>
                                        <th>{{ 'return_page.return.date' | trans }}</th>
                                        <th>{{ 'return_page.return.items_state' | trans }}</th>
                                        <th>{{ 'return_page.table.actions' | trans }}</th>
                                    {% endblock %}
                                </tr>
                            </thead>
                        {% endblock %}

                        {% block salesReturnTableBody %}
                            <tbody>
                            {% for return in data.returns %}
                                {% set orderReferences = [] %}
                                {% set uniqueItemStates = [] %}
                                {% set itemStates = {} %}

                                {% for returnItem in return.returnItems %}
                                    {% if returnItem.orderItem.orderReference not in orderReferences %}
                                        {% set orderReferences = orderReferences | merge([returnItem.orderItem.orderReference]) %}
                                    {% endif %}

                                    {% if returnItem.orderItem.state.name not in uniqueItemStates %}
                                        {% set uniqueItemStates = uniqueItemStates | merge([returnItem.orderItem.state.name]) %}

                                        {% set itemStates = itemStates | merge([{
                                            'status': returnItem.orderItem.state.name,
                                            'label': returnItem.orderItem.state.displayName ?? ('oms.state.' ~ returnItem.orderItem.state.name),
                                        }]) %}
                                    {% endif %}
                                {% endfor %}
                                <tr>
                                    {% block salesReturnTableBodyCells %}
                                        <td>{{ return.returnReference }}</td>
                                        <td>
                                            {% for orderReference in orderReferences %}
                                                <p>{{ orderReference }}</p>
                                            {% endfor %}
                                        </td>
                                        <td>{{ return.returnItems | length | executeFilterIfExists('formatInt', app.locale) }}</td>
                                        <td>{{ date(return.createdAt) | formatDateTime }}</td>
                                        <td>
                                            {% for state in itemStates %}
                                                {% set stateName = state.status | replace({' ': '-'}) | lower %}

                                                {% block state %}
                                                    {% include molecule('status') with {
                                                        data: {
                                                            label: state.label | trans,
                                                            status: stateName,
                                                        },
                                                    } only %}
                                                {% endblock %}
                                            {% endfor %}
                                        </td>
                                        <td>
                                            {% set returnActionsMenuClass = 'menu menu--inline' %}
                                            {% set returnActionsMenuItemClass = 'menu__item' %}

                                            {% block returnActionsMenu %}
                                                <ul class="{{ returnActionsMenuClass }}">
                                                    <li class="{{ returnActionsMenuItemClass }}">
                                                        {% block returnViewAction %}
                                                            <a href="{{ path('return/view', { returnReference: (return.returnReference)}) }}">
                                                                {{ 'return_page.return.view_return' | trans }}
                                                            </a>
                                                        {% endblock %}
                                                    </li>
                                                    <li class="{{ returnActionsMenuItemClass }}">
                                                        {% block returnPrintAction %}
                                                            <a href="{{ path('return/slip-print', { returnReference: (return.returnReference)}) }}" target="_blank">
                                                                {{ 'return_page.return.print_return' | trans }}
                                                            </a>
                                                        {% endblock %}
                                                    </li>
                                                </ul>
                                            {% endblock %}
                                        </td>
                                    {% endblock %}
                                </tr>
                            {% endfor %}
                            </tbody>
                        {% endblock %}
                    </table>
                {% endblock %}
            {% endif %}

            {% block salesReturnTableUnderline %}
                <hr>
            {% endblock %}

            {% block pagination %}
                {% include molecule('pagination') with {
                    data: data.pagination,
                } only %}
            {% endblock %}
        {% endblock %}
    </div>
{% endblock %}
