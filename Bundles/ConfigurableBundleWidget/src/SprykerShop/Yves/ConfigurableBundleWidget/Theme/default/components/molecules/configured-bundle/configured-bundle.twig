{# @var data.bundle \Generated\Shared\Transfer\ConfiguredBundleTransfer #}
{# @var item \Generated\Shared\Transfer\ItemTransfer #}

{% extends model('component') %}

{% define config = {
    name: 'configured-bundle',
    tag: 'article',
} %}

{% define data = {
    bundle: required,
    items: [],
    bundleItems: data.bundle.items | default({}),
    currencyIsoCode: null,
    priceMode: null,
    isQuantityChangeable: false,
    isEditable: true,
    isQuantitySummaryVisible: false,
    quote: null,
    numberFormatConfig: {},
} %}

{%- block extraClass %} box{% endblock -%}

{% block body %}
    {% block bundle %}
        <div class="{{ config.name }}__content {{ config.name }}__container">
            {% block bundleInner %}
                {% block bundleGeneralInformation %}
                    <div class="{{ config.name }}__col col">
                        {% block bundleName %}
                            <h6 class="spacing-right spacing-right--big">
                                {%- block bundleNameText -%}
                                    {% if data.bundle.template.idConfigurableBundleTemplate %}
                                        <a href="{{ path(
                                            'configurable-bundle/configurator/slots', {
                                                'idConfigurableBundleTemplate': data.bundle.template.idConfigurableBundleTemplate,
                                            }
                                        ) }}">{{ data.bundle.template.name | trans }}</a>
                                    {% else %}
                                        {{ data.bundle.template.name | trans }}
                                    {% endif %}
                                {%- endblock -%}
                            </h6>
                        {% endblock %}
                    </div>
                {% endblock %}

                {% block bundleQuantity %}
                    <div class="{{ config.name }}__col col col--lg-4">
                        {% block bundleQuantityInner %}
                            {% include molecule('configured-bundle-quantity', 'ConfigurableBundleWidget') with {
                                data: {
                                    configuredBundle: data.bundle,
                                    readOnly: not (data.isEditable and data.isQuantityChangeable),
                                    numberFormatConfig: data.numberFormatConfig,
                                },
                            } only %}
                        {% endblock %}
                    </div>
                {% endblock %}

                {% block bundlePriceInformation %}
                    <div class="{{ config.name }}__col col">
                        {% block bundleTotal %}
                            <strong class="{{ config.name }}__text">
                                {%- block bundleTotalInner -%}
                                    {% if can('SeePricePermissionPlugin') %}
                                        {%- block bundleTotalTitle -%}
                                            {{ 'configured_bundle.bundle_total' | trans }}
                                        {%- endblock %}

                                        {% block bundleTotalValue -%}
                                            {% set bundleSumSubtotalAggregation = 0 %}

                                            {% for bundleItem in data.bundle.items %}
                                                {% if data.items[bundleItem.GroupKey] is defined %}
                                                    {% set bundleSumSubtotalAggregation = bundleSumSubtotalAggregation + bundleItem.sumSubtotalAggregation %}
                                                {% endif %}
                                            {% endfor %}

                                            {{ bundleSumSubtotalAggregation | money(true, data.currencyIsoCode) }}
                                        {%- endblock -%}
                                    {% else %}
                                        {{ 'customer.access.cannot_see_price' | trans }}
                                    {% endif %}
                                {%- endblock -%}
                            </strong>
                        {% endblock %}
                    </div>
                {% endblock %}
            {% endblock %}
        </div>
    {% endblock %}

    {% block bundleProductList %}
        <div class="{{ config.name }}__products">
            {% block bundleProductListInner %}
                {% set partialSumItemQuantity = 0 %}
                {% for item in data.bundleItems %}
                    {% if data.items[item.GroupKey] is defined %}
                        {% block bundleProductItem %}
                            {% include molecule('configured-bundle-product', 'ConfigurableBundleWidget') with {
                                data: {
                                    product: item,
                                    currencyIsoCode: data.currencyIsoCode,
                                    priceMode: data.priceMode,
                                },
                            } only %}
                        {% endblock %}
                        {% set partialSumItemQuantity = partialSumItemQuantity + item.quantity %}
                    {% endif %}
                {% endfor %}

                {% if data.isQuantitySummaryVisible %}
                    {% set totalSumItemQuantity = 0 %}
                    {% for bundleItem in data.bundle.items %}
                        {% set totalSumItemQuantity = totalSumItemQuantity + bundleItem.quantity %}
                    {% endfor %}
                    {{ 'configured_bundle_widget.items' | trans }} {{ partialSumItemQuantity | executeFilterIfExists('formatInt', app.locale) }} / {{ totalSumItemQuantity | executeFilterIfExists('formatInt', app.locale) }}
                {% endif %}
            {% endblock %}
        </div>

    {% endblock %}

    {% set bundleActionClassName = 'float-right spacing-y' %}
    {% block bundleActions %}
        {% if data.isEditable %}
            {% block bundleActionsInner %}
                <form method="POST" action="{{ path('cart/configured-bundle/remove', {'configuredBundleGroupKey': data.bundle.groupKey}) }}">
                    <input type="hidden" name="configured_bundle_remove_item_form[_token]" value="{{ csrf_token('configured_bundle_remove_item_form') }}">
                    <button data-init-single-click class="link {{ bundleActionClassName }}">
                        {% block removeLinkInner %}
                            {{- 'configured_bundle.remove' | trans | raw -}}
                        {% endblock %}
                    </button>
                </form>
            {% endblock %}
        {% endif %}
    {% endblock %}

    {% block configurableBundleNote %}
        {% if data.isEditable %}
            {% block editableConfigurableBundleNote %}
                {% widget 'ConfiguredBundleNoteWidget' args [data.bundle, data.quote] only %}{% endwidget %}
            {% endblock %}
        {% else %}
            {% block notEditableConfigurableBundleNote %}
                {% include molecule('readonly-bundled-note', 'ConfigurableBundleNoteWidget') ignore missing with {
                    data: {
                        bundle: data.bundle,
                    },
                } only %}
            {% endblock %}
        {% endif %}
    {% endblock %}
{% endblock %}
