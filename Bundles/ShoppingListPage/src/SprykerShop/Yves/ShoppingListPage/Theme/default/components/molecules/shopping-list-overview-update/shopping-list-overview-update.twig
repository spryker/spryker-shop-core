{# @var shoppingListItem \Generated\Shared\Transfer\ShoppingListItemTransfer #}
{# @var item \Generated\Shared\Transfer\ProductViewTransfer #}

{% extends molecule('shopping-list', 'ShoppingListPage') %}

{% define data = {
    idShoppingList: required,
    shoppingListItemProducts: required,
    form: required,
} %}

{% block contentInner %}
    {% for key, shoppingListItem in data.shoppingListItems %}
        {% block shoppingListItem %}
            {% set idShoppingListItem = shoppingListItem.idShoppingListItem %}
            {% set item = data.shoppingListItemProducts[idShoppingListItem] %}

            {{ parent() }}
        {% endblock %}
    {% endfor %}
    <tr class="{{ config.name }}__row">
        <td class="{{ config.name }}__cell" colspan="6">&nbsp;</td>
        <td class="{{ config.name }}__cell text-right">
            {% include molecule('remote-form-submit') with {
                data: {
                    label: 'shopping_list.remove_all_items' | trans,
                },
                attributes: {
                    'form-name': 'clearForm',
                    'form-action': path('shopping-list/clear', { idShoppingList: data.idShoppingList }),
                    'field-id': 'shopping_list_remove_item_form__token[clearForm]',
                    'field-name': 'shopping_list_clear_form[_token]',
                    'field-value': csrf_token('shopping_list_clear_form'),
                },
            } only %}
        </td>
    </tr>
{% endblock %}

{% block row %}
    {{ parent() }}
    <tr>
        <td></td>
        <td colspan="5">
            {% for subForm in data.form.items[key].children %}
                {% if not subForm.rendered and subForm.vars.template_path is defined %}
                    {% include subForm.vars.template_path with {
                        attributes: { 'data-product-unavailable': not isItemAvailable },
                        'form': subForm,
                        'rowClass': config.name ~ '__row ' ~ config.name ~ '__row--borderless ' ~ (not isItemAvailable ? config.name ~ '__row--disable' : null),
                    } only %}
                {% endif %}
            {% endfor %}
        </td>
    </tr>
{% endblock %}

{% block checkboxCol %}{% endblock %}

{% block thumbnailColInner %}
    {% set hasImage = item.images is defined and item.images is not empty and item.images.0.externalUrlSmall is not empty %}
    {% if hasImage %}
        {% set thumbnailModifiers = ['thumbnail', 'small', 'min-size'] %}
        {% block thumbnail %}
            {{ parent() }}
        {% endblock %}
    {% endif %}
{% endblock %}

{% block productCol %}
    <td class="{{ config.name }}__cell" colspan="2">
        {% if item.name %}
            <a href="{{ item.url }}">{{ item.name }}</a>
        {% endif %}
        {% if item.sku %}
            <div>
                <small>{{ item.sku }}</small>
            </div>
        {% endif %}
        {% for attribute in item.superAttributesDefinition %}
            {% if item.attributes[attribute] is defined %}
                <div>{{ ('product.attribute.' ~ attribute) | trans }}: {{ item.attributes[attribute] }}</div>
            {% endif %}
        {% endfor %}
        {% widget 'SoldByMerchantWidget' args [item] only %}
        {% endwidget %}

        {% widget 'ProductConfigurationShoppingListItemDisplayWidget' args [item.shoppingListItem] only %}{% endwidget %}
    </td>
{% endblock %}

{% block priceColInner %}
    {% set hasPrice = item.price is not null %}

    {{ parent() }}
{% endblock %}

{% block quantityColInner %}
    {{ form_row(data.form.items[key].quantity, { 'attr': { 'readonly': not isItemAvailable }, type: 'number' }) }}
{% endblock %}

{% block availableCol %}
    {{ parent() }}
{% endblock %}

{% block buttonCol %}
    <td class="{{ config.name }}__cell text-center">
        {% block buttonColInner %}
            {% include molecule('remote-form-submit') with {
                data: {
                    label: 'customer.account.shopping_list.remove' | trans,
                },
                attributes: {
                    'form-name': 'removeItemForm_' ~ idShoppingListItem,
                    'form-action': path('shopping-list/remove-item', {'idShoppingList': data.idShoppingList, 'idShoppingListItem': idShoppingListItem }),
                    'field-id': 'shopping_list_remove_item_form__token[removeItemForm_' ~ idShoppingListItem ~ ']',
                    'field-name': 'shopping_list_remove_item_form[_token]',
                    'field-value': csrf_token('shopping_list_remove_item_form'),
                },
            } only %}
        {% endblock %}
    </td>
{% endblock %}

{% block shoppingListProductAlternative %}
    {% set permission = can('WriteShoppingListPermissionPlugin', data.idShoppingList) %}

    {{ parent() }}
{% endblock %}
