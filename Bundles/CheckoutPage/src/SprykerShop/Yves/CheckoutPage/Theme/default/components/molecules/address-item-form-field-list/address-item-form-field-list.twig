{% extends model('component') %}

{% define config = {
    name: 'address-item-form-field-list',
} %}

{# @deprecated property "jsAddressClass" is deprecated. #}
{# @deprecated property "parentJsName" is deprecated. #}
{% define data = {
    items: required,
    shippingForm: required,
    jsAddressClass: '',
    parentJsName: '',
    addressSelectClassName: '',
    validatorTriggerClassName: '',
    itemShippingClassName: '',
    hiddenClassName: 'is-hidden',
    validationClassName: '',
} %}

{%- block extraClass -%}
    {{ config.jsName }}
{%- endblock -%}

{% block body %}
    {% set isCompanyBusinessUnitShippingAddressApplicable = false %}

    {% for item in data.items %}
        {% set isItemRelatedToBundle = item.vars.data.relatedBundleItemIdentifier %}

        {% if not isItemRelatedToBundle %}
            <div class="grid {{ config.jsName }}__item-shipping-{{ loop.index }}">
                {% set hasShippingAddresses = item.shippingAddress.id_customer_address is defined %}
                {% set hasCompanyUnitAddresses = item.shippingAddress.id_company_unit_address is defined %}
                {% set companyBusinessUnitShippingAddressWidget = findWidget('CompanyBusinessUnitAddressWidget', ['shippingAddress', item.shippingAddress.vars.data]) %}
                {% set isCompanyBusinessUnitShippingAddressApplicable = companyBusinessUnitShippingAddressWidget and companyBusinessUnitShippingAddressWidget.isApplicable %}
                {% set hasShippingAddressesAndApplicable = isCompanyBusinessUnitShippingAddressApplicable ?: hasShippingAddresses %}
                {% set itemName = item.vars.data.name | default %}
                {% set itemQuantity = item.vars.data.quantity | default %}
                {% set imageUrl = item.vars.data.images[0].externalUrlSmall ?? '' %}

                <div class="col col--sm-1 spacing spacing--inner">
                    {% include molecule('lazy-image') with {
                        modifiers: ['thumbnail', 'small'],
                        data: {
                            imageSrc: imageUrl,
                            imageTitle: itemName,
                        },
                    } only %}
                </div>

                <div class="col col--sm-11 spacing spacing--inner">
                    <p><strong>{{ itemName }}</strong></p>
                    <p>{{ ('customer.order.item_quantity' | trans) }}: {{ itemQuantity | executeFilterIfExists('formatInt', app.locale) }}</p>

                    {% set formFieldUniqueName = 'multiShippingAddresses' %}
                    {% set deliveryContainerClassName = config.jsName ~ '__delivery-' ~ loop.index %}
                    {% set defaultShipmentType = 'delivery' %}
                    {% set currentShipmentType = item.shipmentType.key.vars.value | default %}
                    {% set isDefaultShipmentType = currentShipmentType == defaultShipmentType %}
                    {% set shipmentTypeHiddenClassName = not isDefaultShipmentType ? data.hiddenClassName %}

                    {% block multiShippingAddresses %}
                        {% if hasShippingAddressesAndApplicable %}
                            {% block multiShippingAddressesInner %}
                                {% widget 'ShipmentTypeAddressFormWidget' args [item] with {
                                    data: {
                                        deliveryContainerClassName: deliveryContainerClassName,
                                        shipmentTypesClassName: data.validatorTriggerClassName,
                                        servicePointClassName: data.itemShippingClassName,
                                    },
                                } only %}{% endwidget %}

                                <div class="{{ deliveryContainerClassName }} {{ shipmentTypeHiddenClassName }}">
                                    {% if isCompanyBusinessUnitShippingAddressApplicable %}
                                        {% widget companyBusinessUnitShippingAddressWidget with {
                                            data: {
                                                itemShippingTriggerJsClass: data.addressSelectClassName ~ ' ' ~ deliveryContainerClassName ~ ' ' ~ shipmentTypeHiddenClassName ~ ' ' ~ config.jsName ~ '__trigger--' ~ loop.index,
                                                hasPreselectedOption: true,
                                            },
                                            embed: {
                                                index: loop.index,
                                                item: item,
                                                jsName: config.jsName,
                                                formFieldUniqueName: formFieldUniqueName,
                                            },
                                        } only %}
                                            {% block addressHandler %}
                                                {% set index0 = embed.index - 1 %}
                                                {% include molecule('company-business-unit-address-handler', 'CompanyWidget') ignore missing with {
                                                    attributes: {
                                                        'form-selector': '.' ~ embed.jsName ~ '__item-shipping-' ~ embed.index,
                                                        'data-selector': '.' ~ embed.jsName ~ '__trigger--' ~ embed.index,
                                                        'default-address-selector': '.' ~ embed.jsName ~ '__default-address-item-shipping-' ~ embed.index,
                                                        'address-hidden-input-selector': '[name="addressesForm[' ~ embed.formFieldUniqueName ~ '][' ~ index0 ~ '][shippingAddress][id_customer_address]"]',
                                                        'company-address-hidden-input-selector': '[name="addressesForm[' ~ embed.formFieldUniqueName ~ '][' ~ index0 ~ '][shippingAddress][id_company_unit_address]"]',
                                                        'addresses': data.addresses,
                                                    },
                                                } only %}
                                            {% endblock %}

                                            {% block hiddenFields %}
                                                {% set index0 = embed.index - 1 %}
                                                <input type="hidden" name="addressesForm[{{ embed.formFieldUniqueName }}][{{ index0 }}][shippingAddress][id_customer_address]">
                                                <input type="hidden" name="addressesForm[{{ embed.formFieldUniqueName }}][{{ index0 }}][shippingAddress][id_company_unit_address]">
                                                <input type="hidden" class="{{ embed.jsName }}__default-address-item-shipping-{{ embed.index }}" value="{{ defaultAddressKey }}">
                                            {% endblock %}
                                        {% endwidget %}

                                        {% if hasShippingAddresses %}
                                            {% do item.shippingAddress.id_customer_address.setRendered %}
                                        {% endif %}

                                        {% if hasCompanyUnitAddresses %}
                                            {% do item.shippingAddress.id_company_unit_address.setRendered %}
                                        {% endif %}

                                    {% else %}
                                        {{ form_row(item.shippingAddress.id_customer_address, {
                                            label: 'page.checkout.address.delivery.address_select' | trans,
                                            attr: {
                                                class: data.addressSelectClassName ~ ' ' ~ deliveryContainerClassName ~ ' ' ~ shipmentTypeHiddenClassName ~ ' ' ~ config.jsName ~ '__trigger--' ~ loop.index,
                                            },
                                        }) }}
                                    {% endif %}
                                </div>
                            {% endblock %}
                        {% endif %}
                    {% endblock %}


                    <div class="{{ deliveryContainerClassName }} {{ data.validationClassName }} {{ shipmentTypeHiddenClassName }}">
                        {% include molecule('form') with {
                            class: data.itemShippingClassName ~ ' ' ~ (hasShippingAddressesAndApplicable ? data.hiddenClassName ~ ' ') ~ config.jsName ~ '__item-shipping--' ~ loop.index,
                            data: {
                                form: item.shippingAddress,
                                enableStart: false,
                                enableEnd: false,
                                layout: {
                                    salutation: 'col col--sm-12 col--lg-2',
                                    first_name: 'col col--sm-12 col--lg-5',
                                    last_name: 'col col--sm-12 col--lg-5',
                                    address1: 'col col--sm-12 col--md-8 col--lg-10',
                                    address2: 'col col--sm-12 col--md-4 col--lg-2',
                                    zip_code: 'col col--sm-6 col--lg-4',
                                    city: 'col col--sm-6 col--lg-4',
                                    iso2_code: 'col col--sm-12 col--lg-4',
                                },
                            },
                        } only %}

                        {% if hasShippingAddressesAndApplicable %}
                            {% include molecule('address-form-toggler', 'CustomerPage') ignore missing with {
                                class: config.jsName ~ '__toggler',
                                attributes: {
                                    'trigger-selector': '.' ~ config.jsName ~ '__trigger--' ~ loop.index,
                                    'target-selector': '.' ~ config.jsName ~ '__item-shipping--' ~ loop.index,
                                    'parent-target-class-name': config.jsName,
                                    'is-trigger-has-preselected-option': true,
                                },
                            } only %}
                        {% endif %}
                    </div>
                </div>
            </div>
        {% endif %}
    {% endfor %}
{% endblock %}
