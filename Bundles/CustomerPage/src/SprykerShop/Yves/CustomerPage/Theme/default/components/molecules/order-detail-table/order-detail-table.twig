{% extends model('component') %}

{% define config = {
    name: 'order-detail-table',
} %}

{# @deprecated property "items" is deprecated: use "shipmentGroups" instead. #}

{% define data = {
    items: [],
    currencyIsoCode: required,
    shipmentGroups: data.items | default([]),
    orderShipmentExpenses: data.orderShipmentExpenses | default([]),
    order: required,
    reorderSelectionClassName: '',
} %}

{% block body %}
    {% for shipmentGroup in data.shipmentGroups %}
        <h4>{{ 'customer.order.shipment' | trans }} n&#176;{{ loop.index }}</h4>
        {% widget 'MerchantOrderReferenceForItemsWidget' args [shipmentGroup.items] only %}{% endwidget %}

        <div class="{{ config.name }}__content grid grid--justify">
            <div class="col col--sm-12 col--lg-8">
                {% for item in shipmentGroup.cartItems %}
                    {% set concreteItem = item.bundleProduct | default(item) %}
                    {% set isConfiguredBundle = concreteItem.salesOrderConfiguredBundleItem is defined and concreteItem.salesOrderConfiguredBundleItem is not empty %}

                    {% if not isConfiguredBundle %}
                        <div class="{{ config.name }}__item grid grid--justify">
                            <div class="col col--middle col--sm-1 spacing">
                                {% if data.order is not empty %}
                                    {% if concreteItem.bundleItemIdentifier ?? false %}
                                        {% widget 'CustomerReorderBundleItemCheckboxWidget'
                                            args [concreteItem]
                                            with {
                                                data: { checkboxClasses: data.reorderSelectionClassName },
                                            }
                                            only %}
                                        {% nowidget %}
                                            {{ widgetBlock('CustomerReorderWidgetPlugin', 'formCheckbox', data.order, concreteItem) }} {# @deprecated Use widget 'CustomerReorderItemCheckboxWidget' instead. #}
                                        {% endwidget %}
                                    {% else %}
                                        {% widget 'CustomerReorderItemCheckboxWidget'
                                            args [concreteItem]
                                            with {
                                                data: { checkboxClasses: data.reorderSelectionClassName },
                                            }
                                            only %}
                                        {% nowidget %}
                                            {{ widgetBlock('CustomerReorderWidgetPlugin', 'formCheckbox', data.order, concreteItem) }} {# @deprecated Use widget 'CustomerReorderItemCheckboxWidget' instead. #}
                                        {% endwidget %}
                                    {% endif %}
                                {% endif %}
                            </div>

                            <div class="col col--middle col--sm-3">
                                {% include molecule('lazy-image') with {
                                    modifiers: ['thumbnail', 'small'],
                                    data: {
                                        imageSrc: concreteItem.metadata.image,
                                    },
                                } only %}
                            </div>

                            <div class="col col--sm-8">
                                <div class="grid grid--justify">
                                    <span class="spacing-right col col--sm-9">{{ concreteItem.name }}</span>
                                    <strong class="col col--sm-3 text-right">{{ concreteItem.sumSubtotalAggregation | money(true, data.currencyIsoCode) }}</strong>
                                </div>

                                <p>{{ 'customer.order.item_quantity' | trans }}: {{ concreteItem.quantity | executeFilterIfExists('formatInt', app.locale) }}</p>

                                {% include molecule('order-detail-item-details', 'CustomerPage') ignore missing with {
                                    data: {
                                        orderItem: concreteItem,
                                    },
                                } only %}

                                {% if concreteItem.amount %}
                                    <p>{{ 'customer.order.item_amount' | trans }}: {{ concreteItem.amount.toFloat() | executeFilterIfExists('formatFloat', app.locale) }}</p>
                                {% endif %}

                                {% widget 'ProductConfigurationOrderItemDisplayWidget' args [concreteItem] only %}
                                {% endwidget %}

                                {% if item.bundleItems is not empty %}
                                    <div class="spacing-bottom">
                                        {% block bundleDetailRow %}
                                            {{ 'customer.order.bundled_items' | trans }}
                                            <ul>
                                                {% for bundledItem in item.bundleItems %}
                                                    <li>
                                                        &nbsp; - {{ bundledItem.quantity | executeFilterIfExists('formatInt', app.locale) }} x {{ bundledItem.name }}
                                                        {% include molecule('order-detail-item-details', 'CustomerPage') ignore missing with {
                                                            data: {
                                                                orderItem: bundledItem,
                                                            },
                                                        } only %}
                                                    </li>
                                                {% endfor %}
                                            </ul>
                                        {% endblock %}
                                    </div>
                                {% endif %}

                                {% if concreteItem.productOptions is not empty %}
                                    <div class="spacing-bottom">
                                        {% block detailRow %}
                                            {{ 'customer.order.options' | trans }}
                                            <ul>
                                                {% for productOption in concreteItem.productOptions %}
                                                    <li>
                                                        &nbsp; + {{ productOption.value | trans }}
                                                        <strong>{{ productOption.sumPrice | money(true, data.currencyIsoCode) }}</strong>
                                                    </li>
                                                {% endfor %}
                                            </ul>
                                        {% endblock %}
                                    </div>
                                {% endif %}

                                {% if widgetExists('CartNoteOrderItemNoteWidgetPlugin') %}
                                    <div>
                                        {{ widget('CartNoteOrderItemNoteWidgetPlugin', concreteItem) }} {# @deprecated Use molecule('note-list', 'CartNoteWidget') instead. #}
                                    </div>
                                {% else %}
                                    {% if concreteItem.cartNote is not empty %}
                                        {% include molecule('note-list', 'CartNoteWidget') ignore missing with {
                                            data: {
                                                label: 'cart_note.customer_page.item_note',
                                                note: concreteItem.cartNote,
                                            },
                                        } only %}
                                    {% endif %}
                                {% endif %}
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}

                {% widget 'OrderItemsConfiguredBundleWidget' args [shipmentGroup.items] only %}
                {% elsewidget 'OrderConfiguredBundleWidget' args [data.order, shipmentGroup.items] only %} {# @deprecated Use OrderItemsConfiguredBundleWidget instead. #}
                {% endwidget %}
            </div>

            <div class="col col--sm-12 col--lg-4 spacing-x spacing-x--inner">
                <div class="{{ config.name }}__item {{ config.name }}__item--spacingless">
                    <h5>{{ 'customer.order.delivery_address' | trans }}</h5>
                    <div class="spacing-y spacing-y--inner">
                        {% include molecule('display-address') with {
                            data: {
                                address: shipmentGroup.shipment.shippingAddress,
                            },
                        } only %}
                    </div>
                </div>

                {% if data.orderShipmentExpenses[shipmentGroup.hash] is not empty %}
                    {% set expense = data.orderShipmentExpenses[shipmentGroup.hash] %}

                    <div class="{{ config.name }}__item {{ config.name }}__item--spacingless">
                        <h5>{{ 'customer.order.delivery_method' | trans }}</h5>
                        <div class="spacing-y spacing-y--inner">
                            {% include molecule('shipment-information', 'CustomerPage') with {
                                data: {
                                    shipmentExpense: expense,
                                    currencyIsoCode: data.order.currencyIsoCode,
                                },
                            } only %}
                        </div>
                    </div>
                {% endif %}

                {% if shipmentGroup.shipment.requestedDeliveryDate is not empty %}
                    <div class="spacing-bottom spacing-bottom--big">
                        <h5>{{ 'customer.order.requested_delivery_date' | trans }}</h5>
                        <div class="spacing-y spacing-y--inner">
                            {{ shipmentGroup.shipment.requestedDeliveryDate }}
                        </div>
                    </div>
                {% endif %}
            </div>
        </div>
    {% endfor %}
{% endblock %}
